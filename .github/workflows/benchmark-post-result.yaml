# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: benchmark post results

# read-write repo token
# access to secrets
#
# untrusted code should not be compiled or executed in this script
# see https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
on:
  workflow_run:
    workflows: ["benchmark"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: "Download artifact"
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            const matchArtifact = artifacts.data.artifacts.find((artifact) => {
              return artifact.name == "pr"
            });
            const download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip
      - name: "Write result in PR"
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const issue_number = Number(fs.readFileSync('./pr_number.txt'));
            const iai_feature = fs.readFileSync('bench.txt', { encoding:'utf8', flag:'r' });

            const message = '```\nBenchmark result:\n\n' + iai_feature + '\n```\n';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: message,
            });
